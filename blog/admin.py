from django.contrib import admin
from .models import Post

class PostAdmin(admin.ModelAdmin):
  list_display = ('title', 'published_date')
  search_fields = ('title', 'content')
  list_filter = ('published_date',)
  ordering = ('-published_date',)

admin.site.register(Post, PostAdmin)




# Отличный вопрос! Давайте разберемся, что мы сделали и какую разницу это внесло.

# До изменений:

# • Наша админ-панель была по умолчанию. Для модели Post была доступна стандартная форма добавления/редактирования, но без каких-либо дополнительных опций. 
# • Мы не могли: 
  # * Выбирать, какие поля должны отображаться в списке постов.
  # * Быстро искать посты по ключевым словам.
  # * Фильтровать посты по дате.
  # * Сортировать посты по дате.

# После изменений:

# • Мы добавили опции, которые сделали админ-панель более удобной:
  # * list_display: Теперь в списке постов отображаются поля "title" и "published_date".
  # * search_fields: Поиск постов стал возможен по полям "title" и "content".
  # * list_filter: Мы можем фильтровать посты по дате.
  # * ordering: Посты сортируются по дате в обратном порядке. 

# Что мы сделали:

# 1. Создали класс PostAdmin: Этот класс наследуется от admin.ModelAdmin и является как бы "конфигурацией" для модели Post в админ-панели.
# 2. Добавили свойства: Мы использовали свойства (attributes) класса PostAdmin для изменения того, как отображается и работает модель Post 
# в админ-панели: list_display, search_fields, list_filter, ordering.